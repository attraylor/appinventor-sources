#|
$Source $Yail
|#

(define-repl-form edu.mit.appinventor.aicompanion3.Screen1 Screen1)
(require <com.google.youngandroid.runtime>)

(def (p$badversion )  (set-and-coerce-property! "Form" 'ErrorLabel 'Text "The version of App Inventor you are using is not compatible with this Companion app. " 'text))
(def (p$callrendezvous $code)  (set-and-coerce-property! "Form" 'Web1 'Url (call-yail-primitive "Form" string-append (*list-for-runtime* "http://" (get-var "Form" g$rendezvousServer) "/rendezvous/" ) '(text text text ) "join") 'text)(call-component-method "Form" 'Web1 'PostText (*list-for-runtime* (call-component-method "Form" 'Web1 'BuildRequestData (*list-for-runtime* (call-yail-primitive "Form" make-yail-list (*list-for-runtime* (call-yail-primitive "Form" make-yail-list (*list-for-runtime* "key" (lexical-value $code) ) '(any any ) "make a list") (call-yail-primitive "Form" make-yail-list (*list-for-runtime* "ipaddr" (call-component-method "Form" 'PhoneStatus1 'GetWifiIpAddress (*list-for-runtime*) '()) ) '(any any ) "make a list") (call-yail-primitive "Form" make-yail-list (*list-for-runtime* "port" "9987" ) '(any any ) "make a list") ) '(any any any ) "make a list")) '(list))) '(text)))
(def (p$checkWiFi )  (if (call-yail-primitive "Form" yail-equal? (*list-for-runtime* 1 (call-yail-primitive "Form" string-starts-at (*list-for-runtime* (call-component-method "Form" 'PhoneStatus1 'GetWifiIpAddress (*list-for-runtime*) '()) "Error") '(text text) "starts at")) '(any any) "=") (begin   (call-component-method "Form" 'Notifier1 'ShowChooseDialog (*list-for-runtime* "Your Device does not appear to have a WiFi Connection"  "No WiFi"  "Continue without WiFi"  "Exit"  #f) '(text text text text boolean)))))
(def (p$getRendezvousServer ) (call-component-method "Form" 'TinyDB1 'GetValue (*list-for-runtime* "rendezvousServer"  (get-var "Form" g$rendezvousServer)) '(text any)))
(def (p$isAPK $input) (call-yail-primitive "Form" yail-equal? (*list-for-runtime* (call-yail-primitive "Form" string-starts-at (*list-for-runtime* (lexical-value $input) "http://") '(text text) "starts at") 1) '(any any) "="))
(def (p$processcode $x)  (if ((get-var "Form" p$isAPK) (lexical-value $x)) (begin   (call-component-method "Form" 'PhoneStatus1 'installURL (*list-for-runtime* (lexical-value $x)) '(text))) (begin   ((get-var "Form" p$callrendezvous) (call-component-method "Form" 'PhoneStatus1 'setHmacSeedReturnCode (*list-for-runtime* ((get-var "Form" p$extractRendezvousServer) (lexical-value $x))) '(text)))(call-component-method "Form" 'PhoneStatus1 'startHTTPD (*list-for-runtime* #f) '(boolean)))))
(def (p$extractRendezvousServer $code) (if (call-yail-primitive "Form" string-contains (*list-for-runtime* (lexical-value $code) ";") '(text text) "contains") (let ( ($codes (call-yail-primitive "Form" string-split (*list-for-runtime* (lexical-value $code) ";") '(text text) "split"))  ) (begin   ((get-var "Form" p$setRendezvousServer) (call-yail-primitive "Form" yail-list-get-item (*list-for-runtime* (lexical-value $codes) 1) '(list number) "select list item") #f) (call-yail-primitive "Form" yail-list-get-item (*list-for-runtime* (lexical-value $codes) 2) '(list number) "select list item")) ) (lexical-value $code)))
(def (p$resetRendezvousServer )  (set-var! "Form" g$rendezvousServer "rendezvous.appinventor.mit.edu")(call-component-method "Form" 'TinyDB1 'ClearTag (*list-for-runtime* "rendezvousServer") '(text)))
(def (p$setRendezvousServer $value $permanent)  (set-var! "Form" g$rendezvousServer (lexical-value $value))(if (lexical-value $permanent) (begin   (call-component-method "Form" 'TinyDB1 'StoreValue (*list-for-runtime* "rendezvousServer"  (lexical-value $value)) '(text any)))))
(def (p$startdirectconnect )  (let ( ($ignore "")  )   (set-lexical! $ignore (call-component-method "Form" 'PhoneStatus1 'setHmacSeedReturnCode (*list-for-runtime* "emulator") '(text))) )(call-component-method "Form"'PhoneStatus1 'startHTTPD (*list-for-runtime* #t) '(boolean)))
(def g$rendezvousServer "rendezvous.appinventor.mit.edu")
;;; Screen1

(do-after-form-creation (set-and-coerce-property! "Form" 'Screen1 'AlignHorizontal 3 'number)
 (set-and-coerce-property! "Form" 'Screen1 'BackgroundColor #x00FFFFFF 'number)
 (set-and-coerce-property! "Form" 'Screen1 'BackgroundImage "mooning.png" 'text)
 (set-and-coerce-property! "Form" 'Screen1 'Icon "AI2Companion-Icon.png" 'text)
 (set-and-coerce-property! "Form" 'Screen1 'Scrollable #t 'boolean)
 (set-and-coerce-property! "Form" 'Screen1 'Title "MIT App Inventor 2 Companion" 'text)
)

(define-event Screen1 Initialize()(set-this-form)
    (set-var! "Form" g$rendezvousServer ((get-var "Form" p$getRendezvousServer) ))(set-and-coerce-property! "Form" 'ScanButton 'BackgroundColor -16738048 'number)(set-and-coerce-property! "Form" 'ConnectButton 'BackgroundColor -13312 'number)(if (call-component-method "Form" 'PhoneStatus1 'isDirect (*list-for-runtime*) '()) (begin   (set-and-coerce-property! "Form" 'PhonePanel 'Visible #f 'boolean)(set-and-coerce-property! "Form" 'EmulatorPanel 'Visible #t 'boolean)(set-and-coerce-property! "Form" 'IPContainer 'Visible #f 'boolean)((get-var "Form" p$startdirectconnect) )) (begin   (set-and-coerce-property! "Form" 'PhonePanel 'Visible #t 'boolean)(set-and-coerce-property! "Form" 'EmulatorPanel 'Visible #f 'boolean)(set-and-coerce-property! "Form" 'ipaddrlabel 'Text (call-component-method "Form" 'PhoneStatus1 'GetWifiIpAddress (*list-for-runtime*) '()) 'text)(set-and-coerce-property! "Form" 'IPContainer 'Visible #t 'boolean)((get-var "Form" p$checkWiFi) )))(call-component-method "Form" 'PhoneStatus1 'setAssetsLoaded (*list-for-runtime*) '())(set-and-coerce-property! "Form" 'versionlabel 'Text (call-component-method "Form" 'PhoneStatus1 'getVersionName (*list-for-runtime*) '()) 'text))
;;; SettingsPanel

(add-component Screen1 VerticalArrangement SettingsPanel 
(set-and-coerce-property! "Form" 'SettingsPanel 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'SettingsPanel 'Visible #f 'boolean)

(set-and-coerce-property! "Form" 'SettingsPanel 'Width -2 'number)

)

;;; settingsintro

(add-component SettingsPanel Label settingsintro 
(set-and-coerce-property! "Form" 'settingsintro 'Text "App Inventor Companion Settings" 'text)

)

;;; HorizontalArrangement4

(add-component SettingsPanel HorizontalArrangement HorizontalArrangement4 
)

;;; Label12

(add-component HorizontalArrangement4 Label Label12 
(set-and-coerce-property! "Form" 'Label12 'Text "Set Rendezvous Server: " 'text)

)

;;; rendezvoustextbox

(add-component HorizontalArrangement4 TextBox rendezvoustextbox 
(set-and-coerce-property! "Form" 'rendezvoustextbox 'Hint "Hint for TextBox1" 'text)

)

;;; HorizontalArrangement5

(add-component SettingsPanel HorizontalArrangement HorizontalArrangement5 
)

;;; SetRenzvousServer

(add-component HorizontalArrangement5 Button SetRenzvousServer 
(set-and-coerce-property! "Form" 'SetRenzvousServer 'Text "Set Rendezvous Server" 'text)

)

(define-event SetRenzvousServer Click()(set-this-form)
    ((get-var "Form" p$setRendezvousServer) (get-property "Form" 'rendezvoustextbox 'Text) #t)(call-component-method "Form" 'rendezvoustextbox 'HideKeyboard (*list-for-runtime*) '())(set-and-coerce-property! "Form" 'SettingsPanel 'Visible #f 'boolean)(set-and-coerce-property! "Form" 'MainPanel 'Visible #t 'boolean))
;;; ResetRendezvousServer

(add-component HorizontalArrangement5 Button ResetRendezvousServer 
(set-and-coerce-property! "Form" 'ResetRendezvousServer 'Text "Reset to Default" 'text)

)

(define-event ResetRendezvousServer Click()(set-this-form)
    ((get-var "Form" p$resetRendezvousServer) )(set-and-coerce-property! "Form" 'SettingsPanel 'Visible #f 'boolean)(set-and-coerce-property! "Form" 'MainPanel 'Visible #t 'boolean))
;;; MainPanel

(add-component Screen1 VerticalArrangement MainPanel 
(set-and-coerce-property! "Form" 'MainPanel 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'MainPanel 'Width -2 'number)

)

;;; Header

(add-component MainPanel HorizontalArrangement Header 
(set-and-coerce-property! "Form" 'Header 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'Header 'Width -2 'number)

)

;;; Image1

(add-component Header Image Image1 
(set-and-coerce-property! "Form" 'Image1 'Picture "Title.png" 'text)

)

;;; EmulatorPanel

(add-component MainPanel VerticalArrangement EmulatorPanel 
(set-and-coerce-property! "Form" 'EmulatorPanel 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'EmulatorPanel 'Width -2 'number)

)

;;; Label5

(add-component EmulatorPanel Label Label5 
(set-and-coerce-property! "Form" 'Label5 'Text "Running using the emulator or USB,\nwaiting to get blocks..." 'text)

)

;;; ErrorLabel

(add-component MainPanel Label ErrorLabel 
(set-and-coerce-property! "Form" 'ErrorLabel 'TextAlignment 1 'number)

(set-and-coerce-property! "Form" 'ErrorLabel 'TextColor #xFFFF0000 'number)

(set-and-coerce-property! "Form" 'ErrorLabel 'Width -2 'number)

)

;;; PhonePanel

(add-component MainPanel VerticalArrangement PhonePanel 
(set-and-coerce-property! "Form" 'PhonePanel 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'PhonePanel 'Width -2 'number)

)

;;; Spacer1

(add-component PhonePanel Label Spacer1 
(set-and-coerce-property! "Form" 'Spacer1 'Visible #f 'boolean)

(set-and-coerce-property! "Form" 'Spacer1 'Height 8 'number)

)

;;; instructionContainer

(add-component PhonePanel HorizontalArrangement instructionContainer 
(set-and-coerce-property! "Form" 'instructionContainer 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'instructionContainer 'Width -2 'number)

)

;;; Spacer2

(add-component instructionContainer Label Spacer2 
(set-and-coerce-property! "Form" 'Spacer2 'Width 8 'number)

)

;;; Image2

(add-component instructionContainer Image Image2 
(set-and-coerce-property! "Form" 'Image2 'Picture "Instructions.png" 'text)

)

;;; Spacer3

(add-component instructionContainer Label Spacer3 
(set-and-coerce-property! "Form" 'Spacer3 'Width 8 'number)

)

;;; Label10

(add-component PhonePanel Label Label10 
(set-and-coerce-property! "Form" 'Label10 'Height 8 'number)

)

;;; HorizontalArrangement2

(add-component PhonePanel HorizontalArrangement HorizontalArrangement2 
(set-and-coerce-property! "Form" 'HorizontalArrangement2 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'HorizontalArrangement2 'Width -2 'number)

)

;;; Label7

(add-component HorizontalArrangement2 Label Label7 
(set-and-coerce-property! "Form" 'Label7 'Width 16 'number)

)

;;; CodeBox

(add-component HorizontalArrangement2 TextBox CodeBox 
(set-and-coerce-property! "Form" 'CodeBox 'FontTypeface 1 'number)

(set-and-coerce-property! "Form" 'CodeBox 'Hint "Six Character Code" 'text)

(set-and-coerce-property! "Form" 'CodeBox 'MultiLine #t 'boolean)

(set-and-coerce-property! "Form" 'CodeBox 'TextAlignment 1 'number)

(set-and-coerce-property! "Form" 'CodeBox 'Width -2 'number)

)

;;; Label8

(add-component HorizontalArrangement2 Label Label8 
(set-and-coerce-property! "Form" 'Label8 'Width 16 'number)

)

;;; Label9

(add-component PhonePanel Label Label9 
(set-and-coerce-property! "Form" 'Label9 'Height 4 'number)

)

;;; ConnectButton

(add-component PhonePanel Button ConnectButton 
(set-and-coerce-property! "Form" 'ConnectButton 'BackgroundColor #xFFFFFF00 'number)

(set-and-coerce-property! "Form" 'ConnectButton 'FontSize 18 'number)

(set-and-coerce-property! "Form" 'ConnectButton 'Image "connectwCode.png" 'text)

(set-and-coerce-property! "Form" 'ConnectButton 'TextColor #xFF000000 'number)

)

(define-event ConnectButton Click()(set-this-form)
    (call-component-method "Form" 'CodeBox 'HideKeyboard (*list-for-runtime*) '())((get-var "Form" p$processcode) (get-property "Form" 'CodeBox 'Text)))
;;; Spacer

(add-component PhonePanel Label Spacer 
(set-and-coerce-property! "Form" 'Spacer 'Height 8 'number)

)

;;; ScanButton

(add-component PhonePanel Button ScanButton 
(set-and-coerce-property! "Form" 'ScanButton 'BackgroundColor #xFF00FF00 'number)

(set-and-coerce-property! "Form" 'ScanButton 'FontSize 18 'number)

(set-and-coerce-property! "Form" 'ScanButton 'Image "connectwQR.png" 'text)

(set-and-coerce-property! "Form" 'ScanButton 'TextColor #xFFFFFFFF 'number)

)

(define-event ScanButton Click()(set-this-form)
    (call-component-method "Form" 'BarcodeScanner1 'DoScan (*list-for-runtime*) '()))
;;; IPContainer

(add-component MainPanel HorizontalArrangement IPContainer 
(set-and-coerce-property! "Form" 'IPContainer 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'IPContainer 'Width -2 'number)

)

;;; Label4

(add-component IPContainer Label Label4 
(set-and-coerce-property! "Form" 'Label4 'Text "Your IP Address is: " 'text)

)

;;; ipaddrlabel

(add-component IPContainer Label ipaddrlabel 
(set-and-coerce-property! "Form" 'ipaddrlabel 'Text "Unknown" 'text)

)

;;; HorizontalArrangement3

(add-component MainPanel HorizontalArrangement HorizontalArrangement3 
(set-and-coerce-property! "Form" 'HorizontalArrangement3 'AlignHorizontal 3 'number)

(set-and-coerce-property! "Form" 'HorizontalArrangement3 'Width -2 'number)

)

;;; Label11

(add-component HorizontalArrangement3 Label Label11 
(set-and-coerce-property! "Form" 'Label11 'Text "Version: " 'text)

)

;;; versionlabel

(add-component HorizontalArrangement3 Label versionlabel 
(set-and-coerce-property! "Form" 'versionlabel 'Text "Unknown" 'text)

)

;;; PhoneStatus1

(add-component MainPanel PhoneStatus PhoneStatus1 
)

(define-event PhoneStatus1 OnSettings()(set-this-form)
    (set-and-coerce-property! "Form" 'MainPanel 'Visible #f 'boolean)(set-and-coerce-property! "Form" 'SettingsPanel 'Visible #t 'boolean)(set-and-coerce-property! "Form" 'rendezvoustextbox 'Text ((get-var "Form" p$getRendezvousServer) ) 'text))
;;; Web1

(add-component MainPanel Web Web1 
)

;;; BarcodeScanner1

(add-component MainPanel BarcodeScanner BarcodeScanner1 (set-and-coerce-property! "Form" 'BarcodeScanner1 'UseExternalScanner #f 'boolean)
)

(define-event BarcodeScanner1 AfterScan($result)(set-this-form)
    (set-and-coerce-property! "Form" 'CodeBox 'Text (lexical-value $result) 'text)((get-var "Form" p$processcode) (lexical-value $result)))
;;; Notifier1

(add-component MainPanel Notifier Notifier1 
)

(define-event Notifier1 AfterChoosing($choice)(set-this-form)
    (if (call-yail-primitive "Form" yail-equal? (*list-for-runtime* (lexical-value $choice) "Exit") '(any any) "=") (begin   (call-component-method "Form" 'PhoneStatus1 'shutdown (*list-for-runtime*) '()))))
;;; TinyDB1

(add-component Screen1 TinyDB TinyDB1 
)

(init-runtime)